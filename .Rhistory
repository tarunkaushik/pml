library(caret)
library(xtable)
library(ggplot2)
trainData <- read.csv("pml-training.csv")
validation <- read.csv("pml-testing.csv")
booleanToInt <- function(value)
{
value*1
}
zeroOrNot <- function(value)
{
if(value==0)
{
0
} else {
1
}
}
featureNames <- names(trainData)
k <- data.frame(sapply(validation, FUN=is.na))
k <- data.frame(sapply(k,FUN=booleanToInt))
k <- data.frame(sapply(k,FUN=sum))
names(k) <- "isNA"
cn <- rep(NA,dim(validation)[2])
for(i in 1:dim(validation)[2])
{
cn[i] <- if(k$isNA[i]!=0) { 1 } else { 0 }
}
cn2 <- rep(NA,dim(validation)[2])
for(i in 1:dim(validation)[2])
{
cn2[i] <- i*(1-cn[i])
}
cn2 <- cn2[cn2>0]
cn2 <- setdiff(cn2,c(1,3,4,5))
trainData <- trainData[cn2]
validation <- validation[cn2]
set.seed(2212)
inTrain = createDataPartition(trainData$classe, p = 0.6)[[1]]
training = trainData[inTrain,]
testing = trainData[-inTrain,]
set.seed(45115)
seeds <- round((10000*rnorm(5,mean=100,sd=10)^2)^0.5)
set.seed(seeds[1])
inTrain1 = createDataPartition(training$classe, p = 0.6)[[1]]
set.seed(seeds[2])
inTrain2 = createDataPartition(training$classe, p = 0.6)[[1]]
set.seed(seeds[3])
inTrain3 = createDataPartition(training$classe, p = 0.6)[[1]]
set.seed(seeds[4])
inTrain4 = createDataPartition(training$classe, p = 0.6)[[1]]
set.seed(seeds[5])
inTrain5 = createDataPartition(training$classe, p = 0.6)[[1]]
training1 = training[inTrain1,]
testing1 = training[-inTrain1,]
training2 = training[inTrain2,]
testing2 = training[-inTrain2,]
training3 = training[inTrain3,]
testing3 = training[-inTrain3,]
training4 = training[inTrain4,]
testing4 = training[-inTrain4,]
training5 = training[inTrain5,]
testing5 = training[-inTrain5,]
qplot(training[,3],colour=classe, data=training, geom="density", xlab=names(training)[3])
modelFit1 <- train(classe~.,data=training1, method="rf")
install.packages("e1071")
modelFit1 <- train(classe~.,data=training1, method="rf")
